ap_proc$genero <- set_na(ap_proc$genero, na = c(9), drop.levels = TRUE, as.tag = FALSE)
# Chunk 99
# Genero apoderados
ap_proc$genero <- set_label(x = ap_proc$genero, label = "Genero apoderados")
# Chunk 100
# Genero apoderados
frq(ap_proc$genero)
# Chunk 101
# Transformación a factor
ap_proc$genero_factor <- factor(ap_proc$genero, levels = c(1,2,3), labels = c("Hombre", "Mujer", "Otro"))
# Etiquetar
ap_proc$genero_factor <- set_label(x = ap_proc$genero_factor, label = "Genero apoderados factor")
# Crear variable Porcentaje de apoderadas mujeres en la escuela (N2)
porc_muj_esc <- ap_proc %>%group_by(rbd)%>%summarise(porc_muj_esc = length(which(genero == 2))/(length(which(genero == 1)) + length(which(genero == 2)) + length(which(genero == 3))))
ap_proc <- left_join(ap_proc, porc_muj_esc, by = "rbd")
ap_proc$porc_muj_esc <- set_label(ap_proc$porc_muj_esc,label = "Porcentaje de apoderadas mujeres en la escuela")
# Chunk 102
# Posición política apoderados
frq(ap_proc$pos_pol)
summary(ap_proc$pos_pol)
# Chunk 103
# Posición política apoderados
ap_proc$pos_pol[ap_proc$pos_pol == 8 | ap_proc$pos_pol == 9] <- 99
ap_proc$pos_pol <- set_labels(ap_proc$pos_pol,
labels=c("Derecha" = 1,
"Centro derecha" = 2,
"Centro" = 3,
"Centro Izquierda" = 4,
"Izquierda" = 5,
"Independiente" = 6,
"Ninguna" = 7,
"Ns/Nr"=99)) #Etiquetado categorías
# Chunk 104
# Posición política apoderados
ap_proc$pos_pol <- set_label(x = ap_proc$pos_pol, label = "Posición política apoderados")
# Chunk 105
# Posición política apoderados
frq(ap_proc$pos_pol)
# Chunk 106
# Transformación a factor
ap_proc$pos_pol_factor <- factor(ap_proc$pos_pol, levels = c(1,2,3,4,5,6,7,99), labels = c("Derecha", "Centro Derecha", "Centro", "Centro Izquierda", "Izquierda", "Independiente", "Ninguna", "Ns/Nr"))
# Etiquetar
ap_proc$pos_pol_factor <- set_label(x = ap_proc$pos_pol_factor, label = "Posición política apoderados")
# Chunk 107
# Cuestionario apoderados
frq(ap_proc$libros_hogar)
# Chunk 108
# Cuestionarios apoderados
ap_proc$libros_hogar <- set_na(ap_proc$libros_hogar, na = c(9), drop.levels = TRUE, as.tag = FALSE)
# Chunk 109
# Cuestionario apoderados
ap_proc$libros_hogar <- set_label(x = ap_proc$libros_hogar, label = "Libros en el hogar apoderados")
# Chunk 110
# Cuestionario apoderados
frq(ap_proc$libros_hogar)
# Chunk 111
# Transformación a factor
ap_proc$libros_hogar_factor <- factor(ap_proc$libros_hogar, levels = c(1,2,3,4,5,6), labels = c("Entre 0 y 10 libros", "Entre 11 y 25 libros", "Entre 26 y 100 libros", "Entre 101 y 200 libros", "Entre 201 y 500 libros", "Más de 500 libros"))
# Etiquetar
ap_proc$libros_hogar_factor <- set_label(x = ap_proc$libros_hogar_factor, label = "Libros en el hogar (apoderados)")
# Chunk 112
# Cuestionario apoderados
frq(ap_proc$region)
# Chunk 113
# Cuestionario apoderados
ap_proc$region <- set_label(x = ap_proc$region, label = "Region")
# Chunk 114
# Transformación a factor
ap_proc$region_factor <- factor(ap_proc$region, levels = c(2,7,13), labels = c("Región de Antofagasta", "Región del Maule", "Región Metropolitana"))
# Etiquetar
ap_proc$region_factor <- set_label( x = ap_proc$region_factor, label = "Region apoderados factor")
# Chunk 115
# Cuestionario apoderados
frq(ap_proc$recompensa)
# Chunk 116
# Cuestionario apoderados
ap_proc$recompensa <- set_na(ap_proc$recompensa, na = c(9), drop.levels = TRUE, as.tag = FALSE)
# Chunk 117
# Cuestionario apoderados
ap_proc$recompensa <- set_label(x = ap_proc$recompensa, label = "Esfuerzo es recompensado en escuela (apoderados)")
# Chunk 118
# Cuestionario apoderados
frq(ap_proc$recompensa)
# Chunk 119
# Transformación a factor
ap_proc$recompensa_factor <- factor(ap_proc$recompensa, levels = c(1,2,3,4), labels = c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo"))
# Etiquetar
ap_proc$recompensa_factor <- set_label(x = ap_proc$recompensa_factor, label = "Esfuerzo es recompensado en escuela (apoderados)")
# Chunk 120
frq(ap_proc$personas_hogar)
# Chunk 121
ap_proc$personas_hogar[ap_proc$personas_hogar == 999] <- NA
# Chunk 122
ap_proc$personas_hogar <- set_label(x = ap_proc$personas_hogar, label = "Cantidad de personas en el hogar")
# Chunk 123
frq(ap_proc$personas_hogar)
# Chunk 124
# Ingresos a nivel escuela
ap_proc <- ap_proc %>%
group_by(rbd) %>%
mutate(ingresos_esc = mean(ingresos, na.rm = T))
# Ingresos per capita a nivel escuela
ap_proc <- ap_proc %>%
group_by(rbd) %>%
mutate(ingresos_pc_esc = mean(ingresos_pc, na.rm = T))
#---- Descriptivos variables nuevas----
# Ingresos a nivel escuela
summary(ap_proc$ingresos_esc)
# Ingresos per capita a nivel escuela
summary(ap_proc$ingresos_pc_esc)
#---- Etiquetado variables nuevas----
# Ingresos a nivel escuela
ap_proc$ingresos_esc <- set_label(x = ap_proc$ingresos_esc, label = "Promedio ingresos por escuela")
# Ingresos per capita a nivel escuela
ap_proc$ingresos_pc_esc <- set_label(x = ap_proc$ingresos_pc_esc, label = "Ingreso per capita por escuela")
# Chunk 125
# Construcción educación terciara apoderado por escuela
ap_proc$univ<- ifelse(ap_proc$educ==4,1,0)
ap_proc <- ap_proc %>%
group_by(rbd) %>%
mutate(univ_esc = mean(univ, na.rm = T))
# ---- Descriptivos nuevas variables ----
frq(ap_proc$univ)
summary(ap_proc$univ_esc)
#---- Etiquetado nuevas variables ----
ap_proc$univ <- set_label(x = ap_proc$univ, label = "Educacion terciaria apoderados") # Etiquetado variable
ap_proc$univ <- set_labels(ap_proc$univ,
labels=c( "Universitario"=1,
"No universitario"=0)) #Etiquetado categorias
ap_proc$univ_esc <- set_label(x = ap_proc$univ_esc, label = "Porcentaje ed. terciaria por escuela")
# Chunk 126
# Cuesitionarios apoderados
frq(ap_proc$dependencia)
summary(ap_proc$dependencia)
# Chunk 127
# Etiquetar
ap_proc$dependencia <- set_label(x = ap_proc$dependencia, label = "Dependencia apoderados")
# Chunk 128
# Transformacion a factor
ap_proc$dependencia_factor <- factor(ap_proc$dependencia, levels = c(1,2,3), labels = c("Municipal", "Part. Subvencionado", "Part. Privado"))
# Etiquetar
ap_proc$dependencia_factor <- set_label(x = ap_proc$dependencia_factor, label = "Dependencia administrativa")
# Chunk 129
# Construccion heterogeneidad
ap_proc <- ap_proc %>%
group_by(rbd) %>%
mutate(heterogen_esc = sd(ingresos, na.rm = T))
#---- Descriptivo variables nuevas ----
summary(ap_proc$heterogen_esc)
#---- Etiquetado variables nuevas ----
ap_proc$heterogen_esc <- set_label(x = ap_proc$heterogen_esc, label = "Heterogeneidad de la escuela")
# Chunk 130
# Join
ap_est <- left_join(x = est_proc,y = ap_proc,by =c("folio"="folio"),suffix=c("_est","_ap"))
# Chunk 131
# Guardar respuestas del nivel educacional de los padres. Si no respondió, se incluye la respuesta más alta reportada por los estudiantes.
ap_est$educ_ap <- ifelse(is.na(ap_est$educ), ap_est$educ_padres, ap_est$educ)
ap_est$educ_ap <- set_label(x = ap_est$educ,label = "Nivel educacional de los apoderados")
# Chunk 132
# Transformacion a factor
ap_est$educ_factor_ap <- factor(ap_est$educ_ap,
levels = c(1,2,3,4),
labels = c("8vo básico o menos", "Educación media", "Educación Técnica Superior", "Educación universitaria o posgrado"))
ap_est$educ_factor_ap <- set_label(x = ap_est$educ_factor_ap,label = "Nivel educacional de los apoderados factor") # Etiquetar
# Centrado a la media grupal (CWC) (rbd_est)
## Promedio percepción meritocracia apoderados
ap_est$prom_percmer_ap_cwc <- center(ap_est$prom_percmer_ap, type = "CWC", group = ap_est$rbd_est)
ap_est$prom_percmer_ap_cwc <- set_label(x = ap_est$prom_percmer_ap_cwc, label = "Promedio Percepción meritocratica apoderados (CWC)")
## Sentido justicia indirecto Ln
ap_est$sj_indirect_ln_cwc <- center(ap_est$sj_indirect_ln, type = "CWC", group = ap_est$rbd_est)
ap_est$sj_indirect_ln_cwc <- set_label(x = ap_est$sj_indirect_ln_cwc, label = "Sentido justicia indirecto ln (CWC)")
## Sentido justicia directo
ap_est$sj_direct_cwc <- center(ap_est$sj_direct, type = "CWC", group = ap_est$rbd_est)
ap_est$sj_direct_cwc <- set_label(x = ap_est$sj_direct_cwc, label = "Sentido justicia directo (CWC)")
## Posición Política estudiante
ap_est$pos_pol_est_cwc <- center(ap_est$pos_pol_est, type = "CWC", group = ap_est$rbd_est)
ap_est$pos_pol_est_cwc <- set_label(x = ap_est$pos_pol_est_cwc, "Posición política estudiantes (CWC)")
## Recompensa estudiante
ap_est$recompensa_est_cwc <- center(ap_est$recompensa_est, type = "CWC", group = ap_est$rbd_est)
ap_est$recompensa_est_cwc <- set_label(x = ap_est$recompensa_est_cwc, label = "Esfuerzo es recompensado en escuela (estudiantes - CWC)")
## La opinion es tomada en cuenta por los profesores
ap_est$resp_prof_cwc <- center(ap_est$resp_prof, type = "CWC", group = ap_est$rbd_est)
ap_est$resp_prof_cwc <- set_label(x = ap_est$resp_prof_cwc, label = "Justicia en el trato profesores (CWC)")
# Promedio de notas obtenido
ap_est$prom_obt_cwc <- center(ap_est$prom_obt, type = "CWC", group = ap_est$rbd_est)
ap_est$prom_obt_cwc <- set_label(x = ap_est$prom_obt_cwc, label = "Promedio de notas obtenido (CWC)")
# Promedio de notas merecido
ap_est$prom_mer_cwc <- center(ap_est$prom_mer, type = "CWC", group = ap_est$rbd_est)
ap_est$prom_mer_cwc <- set_label(x = ap_est$prom_mer_cwc, label = "Promedio de notas obtenido CWC")
## Posición Política apoderado
ap_est$pos_pol_ap_cwc <- center(ap_est$pos_pol_ap, type = "CWC", group = ap_est$rbd_est)
ap_est$pos_pol_ap_cwc <- set_label(x = ap_est$pos_pol_ap_cwc, label = "Posición política (apoderados - CWC)" )
## Educación apoderado
ap_est$educ_ap_cwc <- center(ap_est$educ_ap, type = "CWC", group = ap_est$rbd_est)
ap_est$educ_ap_cwc <- set_label(x = ap_est$educ_ap_cwc, label = "Nivel educacional más alto apoderados (CWC)")
## Libros Hogar apoderado
ap_est$libros_hogar_ap_cwc <- center(ap_est$libros_hogar_ap, type = "CWC", group = ap_est$rbd_est)
ap_est$libros_hogar_ap_cwc <- set_label(x = ap_est$libros_hogar_ap_cwc, label = "Libros en el hogar (apoderados - CWC)")
## Recompensa apoderado
ap_est$recompensa_ap_cwc <- center(ap_est$recompensa_ap, type = "CWC", group = ap_est$rbd_est)
ap_est$recompensa_ap_cwc <- set_label(x = ap_est$recompensa_ap_cwc, label = "Esfuerzo es recompensado en escuela (apoderados - CWC)")
## Edad apoderado
ap_est$edad_ap_cwc <- center(ap_est$edad_ap, type = "CWC", group = ap_est$rbd_est)
ap_est$edad_ap_cwc <- set_label(x = ap_est$edad_ap_cwc, label = "Edad apoderados (CWC)")
## Percepción desigualdad apoderados
#ap_est$dem_desig_cwc <- center(ap_est$dem_desig, type = "CWC", group = ap_est$rbd_est)
#ap_est$dem_desig_cwc <- set_label(x = ap_est$dem_desig_cwc, label = "Percepción desigualdad (CWC)")
sjPlot::view_df(ap_est, show.type = T, show.frq = T,show.na = T, file="codebook.html")
sjPlot::view_df(ap, show.type = T, show.frq = T,show.na = T, file="codebook_orig.html")
sjPlot::view_df(est, show.type = T, show.frq = T,show.na = T, file="codebook_orig_est.html")
sjPlot::view_df(ap_est, show.type = T, show.frq = T,show.na = T, file="codebook_proc.html",encoding = "Windows-1252")
sjPlot::view_df(ap, show.type = T, show.frq = T,show.na = T, file="codebook_orig_ap.html",encoding = "Windows-1252")
sjPlot::view_df(est, show.type = T, show.frq = T,show.na = T, file="codebook_orig_est.html", encoding = "Windows-1252")
load(file = "input/data/ap_est.RData")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
Sys.setlocale("LC_ALL", "ES_ES.UTF-8")
load("../input/data/basepuntaje.RData")
library(mice)
library(lavaan)
library(stargazer)
library(dplyr)
library(sjPlot)
library(tidyverse)
# generate 5 multiple complete datasets
cfa_red1 <- '
# variables latentes estudiantes
redistribucion_est =~ redistriv_est + juicio_desigualdad_est
#merit_atriv_est =~ atriv_pobr_esf_est + atriv_pobr_tal_est
#derechos_ig=~ educ_est +  salud_est
protesta  =~ cortes + tomas
# variables latentes apoderado
redistribucion_ap =~ redistriv_ap + juicio_desigualdad_ap
#merit_atriv_ap =~ atriv_pobr_esf_ap + atriv_pobr_tal_ap
#derechos_ig_ap=~ educ_ap +  salud_ap
'
# fit model for each complete dataset
fit1 <- cfa(cfa_red1, data = basepuntaje)
# predict scores for all models
p1 <- predict(fit1)
# compute 'average' across 5 sets of scores:
scores <- (p1)
#Generate factor scores
scores_dat = as.data.frame(scores)
# Adaptar base para agregar factor scores (sacar todos NA)
basepuntaje = basepuntaje[rowSums(is.na(basepuntaje[1:7])) != 5, ]
# Merge with factor scores
basepuntaje = cbind(basepuntaje, scores)
# Check
stargazer(basepuntaje[,8:10], type = "text")
library(scales)
#basepuntaje$protesta_100 <- rescale(basepuntaje$protesta, from = c(-1.5522, 1.1341 ), to = c(0, 100))3
#basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(protesta_rbd=mean(protesta))
#basepuntaje$protesta_100 <- rescale(basepuntaje$protesta, from = c(-1.5522, 1.1341 ), to = c(0, 100))
#basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(nse_rbd=mean(ingresos_pc_cien))
library(lme4)
reg0a= lmer(redistribucion_est ~ 1 + (1|rbd_est), data=basepuntaje)
reg1a= lmer(redistribucion_est ~ 1  + nse_rbd+ (1|rbd_est), data=basepuntaje)
basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(nse_rbd=mean(ingresos_pc_cien))
basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(nse_rbd=mean(ingresos_pc))
load("../input/data/basepuntaje.RData")
library(mice)
library(lavaan)
library(stargazer)
library(dplyr)
library(sjPlot)
library(tidyverse)
# generate 5 multiple complete datasets
cfa_red1 <- '
# variables latentes estudiantes
redistribucion_est =~ redistriv_est + juicio_desigualdad_est
#merit_atriv_est =~ atriv_pobr_esf_est + atriv_pobr_tal_est
#derechos_ig=~ educ_est +  salud_est
protesta  =~ cortes + tomas
# variables latentes apoderado
redistribucion_ap =~ redistriv_ap + juicio_desigualdad_ap
#merit_atriv_ap =~ atriv_pobr_esf_ap + atriv_pobr_tal_ap
#derechos_ig_ap=~ educ_ap +  salud_ap
'
# fit model for each complete dataset
fit1 <- cfa(cfa_red1, data = basepuntaje)
# predict scores for all models
p1 <- predict(fit1)
# compute 'average' across 5 sets of scores:
scores <- (p1)
#Generate factor scores
scores_dat = as.data.frame(scores)
# Adaptar base para agregar factor scores (sacar todos NA)
basepuntaje = basepuntaje[rowSums(is.na(basepuntaje[1:7])) != 5, ]
# Merge with factor scores
basepuntaje = cbind(basepuntaje, scores)
# Check
stargazer(basepuntaje[,8:10], type = "text")
library(scales)
#basepuntaje$protesta_100 <- rescale(basepuntaje$protesta, from = c(-1.5522, 1.1341 ), to = c(0, 100))3
#basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(protesta_rbd=mean(protesta))
#basepuntaje$protesta_100 <- rescale(basepuntaje$protesta, from = c(-1.5522, 1.1341 ), to = c(0, 100))
basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(nse_rbd=mean(ingresos_pc))
library(lme4)
reg0a= lmer(redistribucion_est ~ 1 + (1|rbd_est), data=basepuntaje)
reg1a= lmer(redistribucion_est ~ 1  + nse_rbd+ (1|rbd_est), data=basepuntaje)
reg2a= lmer(redistribucion_est ~ 1  +  nse_rbd + redistribucion_ap + (1|rbd_est), data=basepuntaje)
##
reg0b= lmer(protesta ~ 1 + (1|rbd_est), data=basepuntaje)
reg1b= lmer(protesta ~ 1  + nse_rbd + (1|rbd_est), data=basepuntaje)
reg3b= lmer(protesta ~ 1  + nse_rbd  + redistribucion_ap + (1|rbd_est), data=basepuntaje)
reg5b= lmer(protesta ~ 1  + nse_rbd   + redistribucion_est +  (1|rbd_est), data=basepuntaje)
reg5b= lmer(protesta ~ 1  + nse_rbd  + redistribucion_ap + redistribucion_est +  (1|rbd_est), data=basepuntaje)
#screenreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b))
knitreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b),
#caption = paste("(\\#tab:getah)",cap1),
custom.header = list("Preferencias redistributivas" = 1:3, "Protesta disruptiva" = 4:7),
caption.above=TRUE,
custom.gof.rows=list(Controls=c("No","No","No","Yes","Yes","Yes","Yes")),
# groups=list("Perc. Meritocracia (apoderado)"=1:3,
#             "Setido justicia (indirecto)"=4:6,
#             "Sentido justicia (directo)"=7:8),
custom.coef.names=c("Intercept","NSE-Esc","Redis-Padres","Redis-Est"),
custom.note="*** p < 0.001; ** p < 0.01; * p < 0.05; ¹'Es importante' (Muy importante + Importante + Algo Importante) y 'No es importante' (Nada importante)"
)
load("../input/data/basepuntaje.RData")
library(mice)
library(lavaan)
library(stargazer)
library(dplyr)
library(sjPlot)
library(tidyverse)
library()
# generate 5 multiple complete datasets
cfa_red1 <- '
# variables latentes estudiantes
redistribucion_est =~ redistriv_est + juicio_desigualdad_est
#merit_atriv_est =~ atriv_pobr_esf_est + atriv_pobr_tal_est
#derechos_ig=~ educ_est +  salud_est
protesta  =~ cortes + tomas
# variables latentes apoderado
redistribucion_ap =~ redistriv_ap + juicio_desigualdad_ap
#merit_atriv_ap =~ atriv_pobr_esf_ap + atriv_pobr_tal_ap
#derechos_ig_ap=~ educ_ap +  salud_ap
'
# fit model for each complete dataset
fit1 <- cfa(cfa_red1, data = basepuntaje)
# predict scores for all models
p1 <- predict(fit1)
# compute 'average' across 5 sets of scores:
scores <- (p1)
#Generate factor scores
scores_dat = as.data.frame(scores)
# Adaptar base para agregar factor scores (sacar todos NA)
basepuntaje = basepuntaje[rowSums(is.na(basepuntaje[1:7])) != 5, ]
# Merge with factor scores
basepuntaje = cbind(basepuntaje, scores)
# Check
stargazer(basepuntaje[,8:10], type = "text")
library(scales)
#basepuntaje$protesta_100 <- rescale(basepuntaje$protesta, from = c(-1.5522, 1.1341 ), to = c(0, 100))3
#basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(protesta_rbd=mean(protesta))
#basepuntaje$protesta_100 <- rescale(basepuntaje$protesta, from = c(-1.5522, 1.1341 ), to = c(0, 100))
basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(nse_rbd=mean(ingresos_pc))
library(lme4)
reg0a= lmer(redistribucion_est ~ 1 + (1|rbd_est), data=basepuntaje)
reg1a= lmer(redistribucion_est ~ 1  + nse_rbd+ (1|rbd_est), data=basepuntaje)
reg2a= lmer(redistribucion_est ~ 1  +  nse_rbd + redistribucion_ap + (1|rbd_est), data=basepuntaje)
##
reg0b= lmer(protesta ~ 1 + (1|rbd_est), data=basepuntaje)
reg1b= lmer(protesta ~ 1  + nse_rbd + (1|rbd_est), data=basepuntaje)
reg3b= lmer(protesta ~ 1  + nse_rbd  + redistribucion_ap + (1|rbd_est), data=basepuntaje)
reg5b= lmer(protesta ~ 1  + nse_rbd   + redistribucion_est +  (1|rbd_est), data=basepuntaje)
reg5b= lmer(protesta ~ 1  + nse_rbd  + redistribucion_ap + redistribucion_est +  (1|rbd_est), data=basepuntaje)
#screenreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b))
knitreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b),
#caption = paste("(\\#tab:getah)",cap1),
custom.header = list("Preferencias redistributivas" = 1:3, "Protesta disruptiva" = 4:7),
caption.above=TRUE,
custom.gof.rows=list(Controls=c("No","No","No","Yes","Yes","Yes","Yes")),
# groups=list("Perc. Meritocracia (apoderado)"=1:3,
#             "Setido justicia (indirecto)"=4:6,
#             "Sentido justicia (directo)"=7:8),
custom.coef.names=c("Intercept","NSE-Esc","Redis-Padres","Redis-Est"),
custom.note="*** p < 0.001; ** p < 0.01; * p < 0.05; ¹'Es importante' (Muy importante + Importante + Algo Importante) y 'No es importante' (Nada importante)"
)
load("../input/data/basepuntaje.RData")
library(mice)
library(lavaan)
library(stargazer)
library(dplyr)
library(sjPlot)
library(tidyverse)
library(texreg)
# generate 5 multiple complete datasets
cfa_red1 <- '
# variables latentes estudiantes
redistribucion_est =~ redistriv_est + juicio_desigualdad_est
#merit_atriv_est =~ atriv_pobr_esf_est + atriv_pobr_tal_est
#derechos_ig=~ educ_est +  salud_est
protesta  =~ cortes + tomas
# variables latentes apoderado
redistribucion_ap =~ redistriv_ap + juicio_desigualdad_ap
#merit_atriv_ap =~ atriv_pobr_esf_ap + atriv_pobr_tal_ap
#derechos_ig_ap=~ educ_ap +  salud_ap
'
# fit model for each complete dataset
fit1 <- cfa(cfa_red1, data = basepuntaje)
# predict scores for all models
p1 <- predict(fit1)
# compute 'average' across 5 sets of scores:
scores <- (p1)
#Generate factor scores
scores_dat = as.data.frame(scores)
# Adaptar base para agregar factor scores (sacar todos NA)
basepuntaje = basepuntaje[rowSums(is.na(basepuntaje[1:7])) != 5, ]
# Merge with factor scores
basepuntaje = cbind(basepuntaje, scores)
# Check
stargazer(basepuntaje[,8:10], type = "text")
basepuntajecor = basepuntaje %>% select(redistribucion_est,
protesta,
redistribucion_ap,
ingresos_pc)
sjp.corr(basepuntajecor, na.deletion = c("listwise"),show.p =T, decimals = 3, axis.labels = c("Redistribución estudiantes", "Protesta Disruptiva","Reidstribución Padres","Ingresos (p/c)"))
load("../input/data/basepuntaje.RData")
library(mice)
library(lavaan)
library(stargazer)
library(dplyr)
library(sjPlot)
library(tidyverse)
library(texreg)
# generate 5 multiple complete datasets
cfa_red1 <- '
# variables latentes estudiantes
redistribucion_est =~ redistriv_est + juicio_desigualdad_est
#merit_atriv_est =~ atriv_pobr_esf_est + atriv_pobr_tal_est
#derechos_ig=~ educ_est +  salud_est
protesta  =~ cortes + tomas
# variables latentes apoderado
redistribucion_ap =~ redistriv_ap + juicio_desigualdad_ap
#merit_atriv_ap =~ atriv_pobr_esf_ap + atriv_pobr_tal_ap
#derechos_ig_ap=~ educ_ap +  salud_ap
'
# fit model for each complete dataset
fit1 <- cfa(cfa_red1, data = basepuntaje)
# predict scores for all models
p1 <- predict(fit1)
# compute 'average' across 5 sets of scores:
scores <- (p1)
#Generate factor scores
scores_dat = as.data.frame(scores)
# Adaptar base para agregar factor scores (sacar todos NA)
basepuntaje = basepuntaje[rowSums(is.na(basepuntaje[1:7])) != 5, ]
# Merge with factor scores
basepuntaje = cbind(basepuntaje, scores)
# Check
stargazer(basepuntaje[,8:10], type = "text")
library(scales)
#basepuntaje$protesta_100 <- rescale(basepuntaje$protesta, from = c(-1.5522, 1.1341 ), to = c(0, 100))3
#basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(protesta_rbd=mean(protesta))
#basepuntaje$protesta_100 <- rescale(basepuntaje$protesta, from = c(-1.5522, 1.1341 ), to = c(0, 100))
basepuntaje =  basepuntaje %>% group_by(rbd_est) %>% mutate(nse_rbd=mean(ingresos_pc))
library(lme4)
reg0a= lmer(redistribucion_est ~ 1 + (1|rbd_est), data=basepuntaje)
reg1a= lmer(redistribucion_est ~ 1  + nse_rbd+ (1|rbd_est), data=basepuntaje)
reg2a= lmer(redistribucion_est ~ 1  +  nse_rbd + redistribucion_ap + (1|rbd_est), data=basepuntaje)
##
reg0b= lmer(protesta ~ 1 + (1|rbd_est), data=basepuntaje)
reg1b= lmer(protesta ~ 1  + nse_rbd + (1|rbd_est), data=basepuntaje)
reg3b= lmer(protesta ~ 1  + nse_rbd  + redistribucion_ap + (1|rbd_est), data=basepuntaje)
reg5b= lmer(protesta ~ 1  + nse_rbd   + redistribucion_est +  (1|rbd_est), data=basepuntaje)
reg5b= lmer(protesta ~ 1  + nse_rbd  + redistribucion_ap + redistribucion_est +  (1|rbd_est), data=basepuntaje)
#screenreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b))
knitreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b),
#caption = paste("(\\#tab:getah)",cap1),
custom.header = list("Preferencias redistributivas" = 1:3, "Protesta disruptiva" = 4:7),
caption.above=TRUE,
custom.gof.rows=list(Controls=c("No","No","No","Yes","Yes","Yes","Yes")),
# groups=list("Perc. Meritocracia (apoderado)"=1:3,
#             "Setido justicia (indirecto)"=4:6,
#             "Sentido justicia (directo)"=7:8),
custom.coef.names=c("Intercept","NSE-Esc","Redis-Padres","Redis-Est"),
custom.note="*** p < 0.001; ** p < 0.01; * p < 0.05; ¹'Es importante' (Muy importante + Importante + Algo Importante) y 'No es importante' (Nada importante)"
)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
Sys.setlocale("LC_ALL", "ES_ES.UTF-8")
#screenreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b))
knitreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b),
#caption = paste("(\\#tab:getah)",cap1),
custom.header = list("Preferencias redistributivas" = 1:3, "Protesta disruptiva" = 4:7),
caption.above=TRUE,
font_size =8,
custom.gof.rows=list(Controls=c("No","No","No","Yes","Yes","Yes","Yes")),
# groups=list("Perc. Meritocracia (apoderado)"=1:3,
#             "Setido justicia (indirecto)"=4:6,
#             "Sentido justicia (directo)"=7:8),
custom.coef.names=c("Intercept","NSE-Esc","Redis-Padres","Redis-Est"),
custom.note="*** p < 0.001; ** p < 0.01; * p < 0.05; ¹'Es importante' (Muy importante + Importante + Algo Importante) y 'No es importante' (Nada importante)"
)
#screenreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b))
knitreg(list(reg0a,reg1a,reg2a,reg0b,reg1b,reg3b,reg5b),
#caption = paste("(\\#tab:getah)",cap1),
custom.header = list("Preferencias redistributivas" = 1:3, "Protesta disruptiva" = 4:7),
caption.above=TRUE,
font_size ="small",
custom.gof.rows=list(Controls=c("No","No","No","Yes","Yes","Yes","Yes")),
# groups=list("Perc. Meritocracia (apoderado)"=1:3,
#             "Setido justicia (indirecto)"=4:6,
#             "Sentido justicia (directo)"=7:8),
custom.coef.names=c("Intercept","NSE-Esc","Redis-Padres","Redis-Est"),
custom.note="*** p < 0.001; ** p < 0.01; * p < 0.05; ¹'Es importante' (Muy importante + Importante + Algo Importante) y 'No es importante' (Nada importante)"
)

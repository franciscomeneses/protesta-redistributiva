sjPlot::plot_likert(baselik,
axis.labels   = items,
legend.labels = labels,
legend.pos = "bottom",
#cat.neutral   = , # identifica a indiferentes
geom.colors   = c("#9ECAE1", "#6BAED6", "#4292C6",
"#2171B5"), # colorbrewer2.org
sort.frq      = "neg.asc", # sort descending)
title         = "Percepción de meritocracia padres e hijos",
intercept.line.color = "white", # vertical middle
expand.grid   = F, # no inner margins in plot
show.n        = FALSE, # hide N's in axis labels
grid.range    = 1.8,
geom.size = 0.6, values = "sum.outside")
# Plot Likert: perc. get ahead apoderados y estudiantes
ap_est$
baselik<- ap_est %>% select(perc_esfuerzo_est,perc_esfuerzo_ap)
baselik=na.omit(baselik)
# short var labels
items <- c("Percepcion get ahead estudiantes", "Percepcion get head apoderados")
# cambiar orden para la leyenda
labels= c("Muy en desacuerdo", "En desacuerdo", "De acuerdo", "Muy de acuerdo")  ### E
sjPlot::plot_likert(baselik,
axis.labels   = items,
legend.labels = labels,
legend.pos = "bottom",
#cat.neutral   = , # identifica a indiferentes
geom.colors   = c("#9ECAE1", "#6BAED6", "#4292C6",
"#2171B5"), # colorbrewer2.org
sort.frq      = "neg.asc", # sort descending)
title         = "Percepción de meritocracia padres e hijos",
intercept.line.color = "white", # vertical middle
expand.grid   = F, # no inner margins in plot
show.n        = FALSE, # hide N's in axis labels
grid.range    = 1.8,
geom.size = 0.6, values = "sum.outside")
select(ap_est, sj_indirect_ln, sj_indirect_noln, sj_direct) %>% summarytools::descr()
# Matriz de correlación entre variales principales
basecor<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap, sj_indirect_noln, sj_direct, ingresos_pc)
#basecor=na.omit(basecor)
cormat=cor(basecor, use = "na.or.complete")
#save
#png("output/results/corplot_totscores.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(cormat) <-c(
"A. Trabajo Duro Estudiantes",
"B. Trabajo Duro Padres",
"C. Get ahead Estudiantes",
"D. Get ahead Padres",
"E. Sentido justicia in",
"F. Sentido justicia dir",
"G. Ingresos")
colnames(cormat) <-c("(A)", "(B)","(C)","(D)","(E)","(F)", "(G)")
corrplot(
cormat,
method = "color",
type = "upper",
tl.col = "black",
addCoef.col = "black",
diag = TRUE,
family = "A",
number.font = 6,
tl.cex =0.75,
number.cex = 1)
# Matriz de correlación entre variales principales
basecor<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap,sj_indirect_ln,sj_direct,ingresos_pc_esc, perc_falta_talento_ap, perc_falta_talento_est, perc_falta_esfuerzo_est, perc_falta_esfuerzo_ap, perc_familia_rica_est, perc_familia_rica_ap)
#basecor$permerit <- as.numeric(basecor$perc_esfuerzo_est*basecor$perc_trabajo_duro_est)
#basecor$permerit_ap <- as.numeric(basecor$perc_esfuerzo_ap*basecor$perc_trabajo_duro_ap)
#basecor=na.omit(basecor)
cormat=cor(basecor, use = "na.or.complete")
#save
#png("output/results/corplot_totscores.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(cormat) <-c(
"A. Trabajo Duro Estudiantes",
"B. Trabajo Duro Padres",
"C. Get ahead Estudiantes",
"D. Get ahead Padres",
"E. Sentido justicia in",
"F. Sentido justicia dir",
"G. Ingresos",
"H. ap Ftalento",
"I. est Ftalento",
"J. est Fesf",
"K. ap Fest",
"M. est famrich",
"N. ap famrich")
colnames(cormat) <-c("(A)", "(B)","(C)","(D)","(E)","(F)", "(G)", "(H)","(I)", "(J)","(K)","(M)","(N)")
corrplot(
cormat,
method = "color",
type = "upper",
tl.col = "black",
addCoef.col = "black",
diag = TRUE,
family = "A",
number.font = 6,
tl.cex =0.75,
number.cex = 1)
table(basecor$perc_trabajo_duro_est==basecor$perc_trabajo_duro_ap)
# Matriz de correlación entre variables nivel 2
basecor<- ap_est %>% select(ingresos_esc, ingresos_pc_esc, heterogen_esc, univ_esc)
basecor=na.omit(basecor)
cormat=cor(basecor)
#save
#png("output/results/corplot_totscores.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(cormat) <-c(
"A. Ingresos del hogar por escuela",
"B. Ingresos per capita por escuela",
"C. Heterogeneidad socioeconomica escuela",
"D. Porcentaje ed. tericiaria por escuela")
colnames(cormat) <-c("(A)", "(B)","(C)","(D)")
corrplot(
cormat,
method = "color",
type = "upper",
tl.col = "black",
addCoef.col = "black",
diag = TRUE,
family = "A",
number.font = 6,
tl.cex =0.75,
number.cex = 1)
table(ap_est$rbd_est)
base218<- ap_est %>% filter(rbd_est==218)
table(is.na(base218$ingresos_esc))
table(base218$ingresos_esc)
table(base218$ingresos)
library(lavaan)
baseafc<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap, perc_falta_talento_ap, perc_falta_talento_est, perc_falta_esfuerzo_est, perc_falta_esfuerzo_ap,sj_indirect_noln, ingresos_pc, rbd_est)
baseafc <- set_na(baseafc, na = c(5,9), drop.levels = TRUE, as.tag = FALSE)
baseafc=na.omit(baseafc)
model01 <- 'perc_merit_est=~perc_trabajo_duro_est + perc_esfuerzo_est
atri_merit_est=~perc_falta_talento_est+perc_falta_esfuerzo_est
perc_merit_ap=~perc_trabajo_duro_ap + perc_esfuerzo_ap
atri_merit_ap=~perc_falta_talento_ap+perc_falta_esfuerzo_ap
atri_nomerit_est=~perc_faltasist_econ_est+perc_faltasist_educ_est
atri_nomerit_ap=~perc_faltasist_econ_ap+perc_faltasist_educ_ap
'
fit1_o <- cfa(model = model01,data = baseafc,
ordered = c("perc_trabajo_duro_est","perc_esfuerzo_est","perc_falta_talento_est", "perc_falta_esfuerzo_est","perc_trabajo_duro_ap","perc_esfuerzo_ap","perc_falta_talento_ap","perc_falta_esfuerzo_ap","perc_faltasist_econ_est","perc_faltasist_educ_est","perc_faltasist_econ_ap","perc_faltasist_educ_ap"))
library(lavaan)
baseafc<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap, perc_falta_talento_ap, perc_falta_talento_est, perc_falta_esfuerzo_est, perc_falta_esfuerzo_ap,sj_indirect_noln,perc_faltasist_econ_est,perc_faltasist_educ_est,perc_faltasist_econ_ap,perc_faltasist_educ_ap, ingresos_pc, rbd_est)
baseafc <- set_na(baseafc, na = c(5,9), drop.levels = TRUE, as.tag = FALSE)
baseafc=na.omit(baseafc)
model01 <- 'perc_merit_est=~perc_trabajo_duro_est + perc_esfuerzo_est
atri_merit_est=~perc_falta_talento_est+perc_falta_esfuerzo_est
perc_merit_ap=~perc_trabajo_duro_ap + perc_esfuerzo_ap
atri_merit_ap=~perc_falta_talento_ap+perc_falta_esfuerzo_ap
atri_nomerit_est=~perc_faltasist_econ_est+perc_faltasist_educ_est
atri_nomerit_ap=~perc_faltasist_econ_ap+perc_faltasist_educ_ap
'
fit1_o <- cfa(model = model01,data = baseafc,
ordered = c("perc_trabajo_duro_est","perc_esfuerzo_est","perc_falta_talento_est", "perc_falta_esfuerzo_est","perc_trabajo_duro_ap","perc_esfuerzo_ap","perc_falta_talento_ap","perc_falta_esfuerzo_ap","perc_faltasist_econ_est","perc_faltasist_educ_est","perc_faltasist_econ_ap","perc_faltasist_educ_ap"))
#---------------------------------------------------#
fitMeasures(fit1_o, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
summary(fit1_o, fit.measures=T, standardized=T)
table(baseafc$)
p1a <- predict(fit1_o)
scores_apod = as.data.frame(p1a)
# Merge with factor scores
apod_cfa2_sco = cbind(baseafc, scores_apod)
# Check
stargazer(apod_cfa2_sco, type = "text")
# Save  factor scores
p1a <- predict(fit1_o)
scores_apod = as.data.frame(p1a)
# Merge with factor scores
apod_cfa2_sco = cbind(baseafc, scores_apod)
# Check
stargazer(apod_cfa2_sco, type = "text")
# Save  factor scores
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
p1a <- predict(fit1_o)
scores_apod = as.data.frame(p1a)
# Merge with factor scores
apod_cfa2_sco = cbind(baseafc, scores_apod)
# Check
stargazer(apod_cfa2_sco, type = "text")
# Save  factor scores
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
library(lavaan)
baseafc<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap, perc_falta_talento_ap, perc_falta_talento_est, perc_falta_esfuerzo_est, perc_falta_esfuerzo_ap,sj_indirect_noln, ingresos_pc, rbd_est)
baseafc <- set_na(baseafc, na = c(5,9), drop.levels = TRUE, as.tag = FALSE)
baseafc=na.omit(baseafc)
model01 <- 'perc_merit_est=~perc_trabajo_duro_est + perc_esfuerzo_est
atri_merit_est=~perc_falta_talento_est+perc_falta_esfuerzo_est
perc_merit_ap=~perc_trabajo_duro_ap + perc_esfuerzo_ap
atri_merit_ap=~perc_falta_talento_ap+perc_falta_esfuerzo_ap
'
fit1_o <- cfa(model = model01,data = baseafc,
ordered = c("perc_trabajo_duro_est","perc_esfuerzo_est","perc_falta_talento_est", "perc_falta_esfuerzo_est","perc_trabajo_duro_ap","perc_esfuerzo_ap","perc_falta_talento_ap","perc_falta_esfuerzo_ap"))
#---------------------------------------------------#
fitMeasures(fit1_o, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
summary(fit1_o, fit.measures=T, standardized=T)
p1a <- predict(fit1_o)
scores_apod = as.data.frame(p1a)
# Merge with factor scores
apod_cfa2_sco = cbind(baseafc, scores_apod)
# Check
stargazer(apod_cfa2_sco, type = "text")
# Save  factor scores
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
screenreg(liatri_merit_ap=~perc_falta_talento_ap+perc_falta_esfuerzo_apt(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum))
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
screenreg(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum))
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
screenreg(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum,results_5_accum))
library(lavaan)
baseafc<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap, perc_falta_talento_ap, perc_falta_talento_est, perc_falta_esfuerzo_est, perc_falta_esfuerzo_ap,sj_indirect_noln, ingresos_pc, rbd_est, perc_faltasist_educ)
library(lavaan)
baseafc<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap, perc_falta_talento_ap, perc_falta_talento_est, perc_falta_esfuerzo_est, perc_falta_esfuerzo_ap,sj_indirect_noln, ingresos_pc, rbd_est,perc_faltasist_econ_ap)
baseafc <- set_na(baseafc, na = c(5,9), drop.levels = TRUE, as.tag = FALSE)
baseafc=na.omit(baseafc)
model01 <- 'perc_merit_est=~perc_trabajo_duro_est + perc_esfuerzo_est
atri_merit_est=~perc_falta_talento_est+perc_falta_esfuerzo_est
perc_merit_ap=~perc_trabajo_duro_ap + perc_esfuerzo_ap
atri_merit_ap=~perc_falta_talento_ap+perc_falta_esfuerzo_ap
'
fit1_o <- cfa(model = model01,data = baseafc,
ordered = c("perc_trabajo_duro_est","perc_esfuerzo_est","perc_falta_talento_est", "perc_falta_esfuerzo_est","perc_trabajo_duro_ap","perc_esfuerzo_ap","perc_falta_talento_ap","perc_falta_esfuerzo_ap"))
#---------------------------------------------------#
fitMeasures(fit1_o, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
summary(fit1_o, fit.measures=T, standardized=T)
p1a <- predict(fit1_o)
scores_apod = as.data.frame(p1a)
# Merge with factor scores
apod_cfa2_sco = cbind(baseafc, scores_apod)
# Check
stargazer(apod_cfa2_sco, type = "text")
# Save  factor scores
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap +  sj_indirect_noln + ingresos_pc + as.factor(perc_faltasist_econ_ap) + (1| rbd_est), data = apod_cfa2_sco, REML=F)
screenreg(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum,results_5_accum))
library(lavaan)
baseafc<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap, perc_falta_talento_ap, perc_falta_talento_est, perc_falta_esfuerzo_est, perc_falta_esfuerzo_ap,sj_indirect_noln, ingresos_pc, rbd_est)
baseafc <- set_na(baseafc, na = c(5,9), drop.levels = TRUE, as.tag = FALSE)
baseafc=na.omit(baseafc)
model01 <- 'perc_merit_est=~perc_trabajo_duro_est + perc_esfuerzo_est
atri_merit_est=~perc_falta_talento_est+perc_falta_esfuerzo_est
perc_merit_ap=~perc_trabajo_duro_ap + perc_esfuerzo_ap
atri_merit_ap=~perc_falta_talento_ap+perc_falta_esfuerzo_ap
'
fit1_o <- cfa(model = model01,data = baseafc,
ordered = c("perc_trabajo_duro_est","perc_esfuerzo_est","perc_falta_talento_est", "perc_falta_esfuerzo_est","perc_trabajo_duro_ap","perc_esfuerzo_ap","perc_falta_talento_ap","perc_falta_esfuerzo_ap"))
#---------------------------------------------------#
fitMeasures(fit1_o, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
summary(fit1_o, fit.measures=T, standardized=T)
p1a <- predict(fit1_o)
scores_apod = as.data.frame(p1a)
# Merge with factor scores
apod_cfa2_sco = cbind(baseafc, scores_apod)
# Check
stargazer(apod_cfa2_sco, type = "text")
# Save  factor scores
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
screenreg(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum,results_5_accum))
basecor<- apod_cfa2_sco[,8:15]
basecor<- apod_cfa2_sco[,8:15]
basecor<- apod_cfa2_sco[-c(rbd_est)]
basecor<- apod_cfa2_sco[,8:15]
basecor<- apod_cfa2_sco[-c("rbd_est")]
basecor<- apod_cfa2_sco[-"rbd_est"]
basecor<- apod_cfa2_sco-["rbd_est"]
basecor<- apod_cfa2_sco[-c(11)]
basecor<- apod_cfa2_sco[,8:15]
basecor<- apod_cfa2_sco[-c(11)]
#basecor=na.omit(basecor)
cormat=cor(basecor, use = "na.or.complete")
#save
#png("output/results/corplot_totscores.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(cormat) <-c(
"A. Sentido de justicia notas",
"B. Ingreso familiar",
"C. E.Percepción meritocratica",
"D. E.Atribución de pobreza meritocratica",
"E. A.Percepción meritocratica",
"F. E.Atribución de pobreza meritocratica")
View(cormat)
basecor<- apod_cfa2_sco[,8:15]
basecor<- basecor[-c(11)]
#basecor=na.omit(basecor)
cormat=cor(basecor, use = "na.or.complete")
#save
#png("output/results/corplot_totscores.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(cormat) <-c(
"A. Sentido de justicia notas",
"B. Ingreso familiar",
"C. E.Percepción meritocratica",
"D. E.Atribución de pobreza meritocratica",
"E. A.Percepción meritocratica",
"F. E.Atribución de pobreza meritocratica")
View(cormat)
basecor<- apod_cfa2_sco[,9:15]
View(basecor)
basecor<- basecor[-c(11)]
View(basecor)
basecor<- apod_cfa2_sco[,9:15]
basecor<- basecor[-c(3)]
#basecor=na.omit(basecor)
cormat=cor(basecor, use = "na.or.complete")
#save
#png("output/results/corplot_totscores.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(cormat) <-c(
"A. Sentido de justicia notas",
"B. Ingreso familiar",
"C. E.Percepción meritocratica",
"D. E.Atribución de pobreza meritocratica",
"E. A.Percepción meritocratica",
"F. A.Atribución de pobreza meritocratica")
colnames(cormat) <-c("(A)", "(B)","(C)","(D)","(E)","(F)")
corrplot(
cormat,
method = "color",
type = "upper",
tl.col = "black",
addCoef.col = "black",
diag = TRUE,
family = "A",
number.font = 6,
tl.cex =0.75,
number.cex = 1)
basecor<- apod_cfa2_sco[,9:15]
basecor<- basecor[-c(3)]
#basecor=na.omit(basecor)
cormat=cor(basecor, use = "na.or.complete")
#save
#png("output/results/corplot_totscores.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(cormat) <-c(
"A. Sentido de justicia notas",
"B. Ingreso familiar",
"C. Estudiante Percepción meritocratica",
"D. Estudiante Atribución de pobreza meritocratica",
"E. Apoderado Percepción meritocratica",
"F. Apoderado Atribución de pobreza meritocratica")
colnames(cormat) <-c("(A)", "(B)","(C)","(D)","(E)","(F)")
corrplot(
cormat,
method = "color",
type = "upper",
tl.col = "black",
addCoef.col = "black",
diag = TRUE,
family = "A",
number.font = 6,
tl.cex =0.75,
number.cex = 1)
basecor<- apod_cfa2_sco[,9:15]
basecor<- basecor[-c(3)]
#basecor=na.omit(basecor)
cormat=cor(basecor, use = "na.or.complete")
#save
#png("output/results/corplot_totscores.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(cormat) <-c(
"A. Sentido de justicia notas",
"B. Ingreso familiar",
"C. Percepción meritocratica Estudiante",
"D. Atribución de pobreza meritocratica Estudiante",
"E. Percepción meritocratica Apoderado",
"F. Atribución de pobreza meritocratica Apoderado")
colnames(cormat) <-c("(A)", "(B)","(C)","(D)","(E)","(F)")
corrplot(
cormat,
method = "color",
type = "upper",
tl.col = "black",
addCoef.col = "black",
diag = TRUE,
family = "A",
number.font = 6,
tl.cex =0.75,
number.cex = 1)
library(lavaan)
baseafc<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap, perc_falta_talento_ap, perc_falta_talento_est, perc_falta_esfuerzo_est, perc_falta_esfuerzo_ap,sj_indirect_noln, ingresos_pc, rbd_est, perc_familia_rica)
library(lavaan)
baseafc<- ap_est %>% select(perc_trabajo_duro_est,perc_trabajo_duro_ap,perc_esfuerzo_est,perc_esfuerzo_ap, perc_falta_talento_ap, perc_falta_talento_est, perc_falta_esfuerzo_est, perc_falta_esfuerzo_ap,sj_indirect_noln, ingresos_pc, rbd_est, perc_familia_rica_ap)
baseafc <- set_na(baseafc, na = c(5,9), drop.levels = TRUE, as.tag = FALSE)
baseafc=na.omit(baseafc)
model01 <- 'perc_merit_est=~perc_trabajo_duro_est + perc_esfuerzo_est
atri_merit_est=~perc_falta_talento_est+perc_falta_esfuerzo_est
perc_merit_ap=~perc_trabajo_duro_ap + perc_esfuerzo_ap
atri_merit_ap=~perc_falta_talento_ap+perc_falta_esfuerzo_ap
'
fit1_o <- cfa(model = model01,data = baseafc,
ordered = c("perc_trabajo_duro_est","perc_esfuerzo_est","perc_falta_talento_est", "perc_falta_esfuerzo_est","perc_trabajo_duro_ap","perc_esfuerzo_ap","perc_falta_talento_ap","perc_falta_esfuerzo_ap"))
#---------------------------------------------------#
fitMeasures(fit1_o, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
summary(fit1_o, fit.measures=T, standardized=T)
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap + perc_familia_rica +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
p1a <- predict(fit1_o)
scores_apod = as.data.frame(p1a)
# Merge with factor scores
apod_cfa2_sco = cbind(baseafc, scores_apod)
# Check
stargazer(apod_cfa2_sco, type = "text")
# Save  factor scores
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap + perc_familia_rica +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap + perc_familia_rica_ap +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
screenreg(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum,results_5_accum))
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap + as.factor(perc_familia_rica_ap) +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
screenreg(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum,results_5_accum))
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
screenreg(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum,results_5_accum))
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
screenreg(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum,results_5_accum), custom.coef.names = c("Intercepto", "Libros (C)", "Ocupación (C)", "Educación (C)", "Lenguaje (C)", "Libros (M)", "Ocupación (M)", "Educación (M)", "Lenguaje (M)"))
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
htmlreg(list(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum,results_5_accum)), custom.model.names = c("Lenguaje (C)", "C. Civico (C)","C. Civico (C)", "Lenguaje (M)", "C. Civico (M)", "C. Civico (M)"), custom.coef.names = c("Intercepto", "Ingresos Percapita", "Sentido de justicia", "Percepción Meritocratica Padres", "Atribución Meritocratica Padres"), star.symbol = "\\*", center = T, custom.note = " <div style='text-align: justify'> $***p <$ 0.001, $**p <$ 0.01, $*p <$ 0.05 <br>" , caption.above = T, caption = "Socialización de la percepción meritocratica")
library(lme4)
library(texreg)
results_0_accum  = lmer(perc_merit_est ~ 1 + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_1_accum  = lmer(perc_merit_est ~ 1 + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_2_accum  = lmer(perc_merit_est ~ 1 + sj_indirect_noln + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_3_accum  = lmer(perc_merit_est ~ 1 +  perc_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_4_accum  = lmer(perc_merit_est ~ 1 + atri_merit_ap + (1| rbd_est), data = apod_cfa2_sco, REML=F)
results_5_accum  = lmer(perc_merit_est ~ 1 + perc_merit_ap + atri_merit_ap +  sj_indirect_noln + ingresos_pc + (1| rbd_est), data = apod_cfa2_sco, REML=F)
htmlreg(list(results_0_accum, results_1_accum,results_2_accum, results_3_accum,results_4_accum,results_5_accum), custom.model.names = c("Lenguaje (C)", "C. Civico (C)","C. Civico (C)", "Lenguaje (M)", "C. Civico (M)", "C. Civico (M)"), custom.coef.names = c("Intercepto", "Ingresos Percapita", "Sentido de justicia", "Percepción Meritocratica Padres", "Atribución Meritocratica Padres"), star.symbol = "\\*", center = T, custom.note = " <div style='text-align: justify'> $***p <$ 0.001, $**p <$ 0.01, $*p <$ 0.05 <br>" , caption.above = T, caption = "Socialización de la percepción meritocratica")
xaringan::infinite_moon_reader()
.pull-left[
* __FONDECYT n°1181239__: “Socialización política y educación para la ciudadanía: el rol de la familia y de la escuela”
